

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Mon Sep 26 01:05:54 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    12                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    14                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    15  0000                     
    16                           ; Version 2.36
    17                           ; Generated 28/01/2022 GMT
    18                           ; 
    19                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution. Publication is not required when
    33                           ;        this file is used in an embedded application.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC18F4550 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51  0000                     _PORTAbits	set	3968
    52  0000                     _PORTE	set	3972
    53  0000                     _TRISE	set	3990
    54  0000                     _OSCCONbits	set	4051
    55  0000                     _LATEbits	set	3981
    56                           
    57                           ; #config settings
    58                           
    59                           	psect	cinit
    60  007F72                     __pcinit:
    61                           	callstack 0
    62  007F72                     start_initialization:
    63                           	callstack 0
    64  007F72                     __initialization:
    65                           	callstack 0
    66                           
    67                           ; Clear objects allocated to COMRAM (2 bytes)
    68  007F72  6A02               	clrf	(__pbssCOMRAM+1)& (0+255),c
    69  007F74  6A01               	clrf	__pbssCOMRAM& (0+255),c
    70  007F76                     end_of_initialization:
    71                           	callstack 0
    72  007F76                     __end_of__initialization:
    73                           	callstack 0
    74  007F76  0100               	movlb	0
    75  007F78  EFBE  F03F         	goto	_main	;jump to C main() function
    76                           
    77                           	psect	bssCOMRAM
    78  000001                     __pbssCOMRAM:
    79                           	callstack 0
    80  000001                     _BUTON_Ticks:
    81                           	callstack 0
    82  000001                     	ds	1
    83  000002                     _BUTON_Status:
    84                           	callstack 0
    85  000002                     	ds	1
    86                           
    87                           	psect	cstackCOMRAM
    88  000003                     __pcstackCOMRAM:
    89                           	callstack 0
    90  000003                     ??_IO_Task:
    91  000003                     
    92                           ; 1 bytes @ 0x0
    93  000003                     	ds	1
    94  000004                     
    95                           ; 1 bytes @ 0x1
    96 ;;
    97 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
    98 ;;
    99 ;; *************** function _main *****************
   100 ;; Defined at:
   101 ;;		line 46 in file "main.c"
   102 ;; Parameters:    Size  Location     Type
   103 ;;		None
   104 ;; Auto vars:     Size  Location     Type
   105 ;;		None
   106 ;; Return value:  Size  Location     Type
   107 ;;                  1    wreg      void 
   108 ;; Registers used:
   109 ;;		wreg, status,2, status,0, cstack
   110 ;; Tracked objects:
   111 ;;		On entry : 0/0
   112 ;;		On exit  : 0/0
   113 ;;		Unchanged: 0/0
   114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   115 ;;      Params:         0       0       0       0       0       0       0       0       0
   116 ;;      Locals:         0       0       0       0       0       0       0       0       0
   117 ;;      Temps:          0       0       0       0       0       0       0       0       0
   118 ;;      Totals:         0       0       0       0       0       0       0       0       0
   119 ;;Total ram usage:        0 bytes
   120 ;; Hardware stack levels required when called: 1
   121 ;; This function calls:
   122 ;;		_IO_Task
   123 ;;		_MCU_Initialize
   124 ;; This function is called by:
   125 ;;		Startup code after reset
   126 ;; This function uses a non-reentrant model
   127 ;;
   128                           
   129                           	psect	text0
   130  007F7C                     __ptext0:
   131                           	callstack 0
   132  007F7C                     _main:
   133                           	callstack 30
   134  007F7C                     
   135                           ;main.c: 47:     MCU_Initialize();
   136  007F7C  ECC6  F03F         	call	_MCU_Initialize	;wreg free
   137  007F80                     l744:
   138                           
   139                           ;main.c: 49:         IO_Task();
   140  007F80  ECD5  F03F         	call	_IO_Task	;wreg free
   141  007F84  EFC0  F03F         	goto	l744
   142  007F88  EF00  F000         	goto	start
   143  007F8C                     __end_of_main:
   144                           	callstack 0
   145                           
   146 ;; *************** function _MCU_Initialize *****************
   147 ;; Defined at:
   148 ;;		line 54 in file "main.c"
   149 ;; Parameters:    Size  Location     Type
   150 ;;		None
   151 ;; Auto vars:     Size  Location     Type
   152 ;;		None
   153 ;; Return value:  Size  Location     Type
   154 ;;                  1    wreg      void 
   155 ;; Registers used:
   156 ;;		wreg, status,2
   157 ;; Tracked objects:
   158 ;;		On entry : 0/0
   159 ;;		On exit  : 0/0
   160 ;;		Unchanged: 0/0
   161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   162 ;;      Params:         0       0       0       0       0       0       0       0       0
   163 ;;      Locals:         0       0       0       0       0       0       0       0       0
   164 ;;      Temps:          0       0       0       0       0       0       0       0       0
   165 ;;      Totals:         0       0       0       0       0       0       0       0       0
   166 ;;Total ram usage:        0 bytes
   167 ;; Hardware stack levels used: 1
   168 ;; This function calls:
   169 ;;		Nothing
   170 ;; This function is called by:
   171 ;;		_main
   172 ;; This function uses a non-reentrant model
   173 ;;
   174                           
   175                           	psect	text1
   176  007F8C                     __ptext1:
   177                           	callstack 0
   178  007F8C                     _MCU_Initialize:
   179                           	callstack 30
   180  007F8C                     
   181                           ;main.c: 56:     TRISE = 0b001;
   182  007F8C  0E01               	movlw	1
   183  007F8E  6E96               	movwf	150,c	;volatile
   184                           
   185                           ;main.c: 57:     PORTE = 0b000;
   186  007F90  0E00               	movlw	0
   187  007F92  6E84               	movwf	132,c	;volatile
   188                           
   189                           ;main.c: 60:     OSCCONbits.SCS = 0b11;
   190  007F94  0E03               	movlw	3
   191  007F96  12D3               	iorwf	211,f,c	;volatile
   192                           
   193                           ;main.c: 61:     OSCCONbits.IRCF = 0b111;
   194  007F98  0E70               	movlw	112
   195  007F9A  12D3               	iorwf	211,f,c	;volatile
   196  007F9C                     
   197                           ;main.c: 62:     OSCCONbits.IDLEN = 0;
   198  007F9C  9ED3               	bcf	211,7,c	;volatile
   199  007F9E                     
   200                           ;main.c: 63:     OSCCONbits.IOFS = 1;
   201  007F9E  84D3               	bsf	211,2,c	;volatile
   202                           
   203                           ;main.c: 65:     BUTON_Status = 0;
   204  007FA0  0E00               	movlw	0
   205  007FA2  6E02               	movwf	_BUTON_Status^0,c
   206                           
   207                           ;main.c: 66:     BUTON_Ticks = 0;
   208  007FA4  0E00               	movlw	0
   209  007FA6  6E01               	movwf	_BUTON_Ticks^0,c
   210  007FA8  0012               	return		;funcret
   211  007FAA                     __end_of_MCU_Initialize:
   212                           	callstack 0
   213                           
   214 ;; *************** function _IO_Task *****************
   215 ;; Defined at:
   216 ;;		line 69 in file "main.c"
   217 ;; Parameters:    Size  Location     Type
   218 ;;		None
   219 ;; Auto vars:     Size  Location     Type
   220 ;;		None
   221 ;; Return value:  Size  Location     Type
   222 ;;                  1    wreg      void 
   223 ;; Registers used:
   224 ;;		wreg, status,2, status,0
   225 ;; Tracked objects:
   226 ;;		On entry : 0/0
   227 ;;		On exit  : 0/0
   228 ;;		Unchanged: 0/0
   229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   230 ;;      Params:         0       0       0       0       0       0       0       0       0
   231 ;;      Locals:         0       0       0       0       0       0       0       0       0
   232 ;;      Temps:          1       0       0       0       0       0       0       0       0
   233 ;;      Totals:         1       0       0       0       0       0       0       0       0
   234 ;;Total ram usage:        1 bytes
   235 ;; Hardware stack levels used: 1
   236 ;; This function calls:
   237 ;;		Nothing
   238 ;; This function is called by:
   239 ;;		_main
   240 ;; This function uses a non-reentrant model
   241 ;;
   242                           
   243                           	psect	text2
   244  007FAA                     __ptext2:
   245                           	callstack 0
   246  007FAA                     _IO_Task:
   247                           	callstack 30
   248  007FAA                     
   249                           ;main.c: 71:     while(PORTAbits.RA0){
   250  007FAA  EFEC  F03F         	goto	l738
   251  007FAE                     l728:
   252                           
   253                           ;main.c: 72:         BUTON_Ticks++;
   254  007FAE  2A01               	incf	_BUTON_Ticks^0,f,c
   255  007FB0                     
   256                           ;main.c: 73:         if(BUTON_Ticks>20){
   257  007FB0  0E14               	movlw	20
   258  007FB2  6401               	cpfsgt	_BUTON_Ticks^0,c
   259  007FB4  EFDE  F03F         	goto	u11
   260  007FB8  EFE0  F03F         	goto	u10
   261  007FBC                     u11:
   262  007FBC  EFE4  F03F         	goto	l736
   263  007FC0                     u10:
   264  007FC0                     
   265                           ;main.c: 74:             BUTON_Ticks = 0;
   266  007FC0  0E00               	movlw	0
   267  007FC2  6E01               	movwf	_BUTON_Ticks^0,c
   268  007FC4                     
   269                           ;main.c: 75:             BUTON_Status^=1;
   270  007FC4  0E01               	movlw	1
   271  007FC6  1A02               	xorwf	_BUTON_Status^0,f,c
   272  007FC8                     l736:
   273                           
   274                           ;main.c: 77:         _delay((unsigned long)((10)*(8000000/4000.0)));
   275  007FC8  0E1A               	movlw	26
   276  007FCA  6E03               	movwf	??_IO_Task^0,c
   277  007FCC  0EF8               	movlw	248
   278  007FCE                     u47:
   279  007FCE  2EE8               	decfsz	wreg,f,c
   280  007FD0  D7FE               	bra	u47
   281  007FD2  2E03               	decfsz	??_IO_Task^0,f,c
   282  007FD4  D7FC               	bra	u47
   283  007FD6  D000               	nop2	
   284  007FD8                     l738:
   285                           
   286                           ;main.c: 71:     while(PORTAbits.RA0){
   287  007FD8  B080               	btfsc	128,0,c	;volatile
   288  007FDA  EFF1  F03F         	goto	u21
   289  007FDE  EFF3  F03F         	goto	u20
   290  007FE2                     u21:
   291  007FE2  EFD7  F03F         	goto	l728
   292  007FE6                     u20:
   293  007FE6                     
   294                           ;main.c: 81:     if(BUTON_Status){
   295  007FE6  5002               	movf	_BUTON_Status^0,w,c
   296  007FE8  B4D8               	btfsc	status,2,c
   297  007FEA  EFF9  F03F         	goto	u31
   298  007FEE  EFFB  F03F         	goto	u30
   299  007FF2                     u31:
   300  007FF2  EFFE  F03F         	goto	l42
   301  007FF6                     u30:
   302  007FF6  808D               	bsf	141,0,c	;volatile
   303  007FF8  EFFF  F03F         	goto	l44
   304  007FFC                     l42:
   305  007FFC  908D               	bcf	141,0,c	;volatile
   306  007FFE                     l44:
   307  007FFE  0012               	return		;funcret
   308  008000                     __end_of_IO_Task:
   309                           	callstack 0
   310  0000                     
   311                           	psect	rparam
   312  0000                     
   313                           	psect	idloc
   314                           
   315                           ;Config register IDLOC0 @ 0x200000
   316                           ;	unspecified, using default values
   317  200000                     	org	2097152
   318  200000  FF                 	db	255
   319                           
   320                           ;Config register IDLOC1 @ 0x200001
   321                           ;	unspecified, using default values
   322  200001                     	org	2097153
   323  200001  FF                 	db	255
   324                           
   325                           ;Config register IDLOC2 @ 0x200002
   326                           ;	unspecified, using default values
   327  200002                     	org	2097154
   328  200002  FF                 	db	255
   329                           
   330                           ;Config register IDLOC3 @ 0x200003
   331                           ;	unspecified, using default values
   332  200003                     	org	2097155
   333  200003  FF                 	db	255
   334                           
   335                           ;Config register IDLOC4 @ 0x200004
   336                           ;	unspecified, using default values
   337  200004                     	org	2097156
   338  200004  FF                 	db	255
   339                           
   340                           ;Config register IDLOC5 @ 0x200005
   341                           ;	unspecified, using default values
   342  200005                     	org	2097157
   343  200005  FF                 	db	255
   344                           
   345                           ;Config register IDLOC6 @ 0x200006
   346                           ;	unspecified, using default values
   347  200006                     	org	2097158
   348  200006  FF                 	db	255
   349                           
   350                           ;Config register IDLOC7 @ 0x200007
   351                           ;	unspecified, using default values
   352  200007                     	org	2097159
   353  200007  FF                 	db	255
   354                           
   355                           	psect	config
   356                           
   357                           ;Config register CONFIG1L @ 0x300000
   358                           ;	unspecified, using default values
   359                           ;	PLL Prescaler Selection bits
   360                           ;	PLLDIV = 0x0, unprogrammed default
   361                           ;	System Clock Postscaler Selection bits
   362                           ;	CPUDIV = 0x0, unprogrammed default
   363                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
   364                           ;	USBDIV = 0x0, unprogrammed default
   365  300000                     	org	3145728
   366  300000  00                 	db	0
   367                           
   368                           ;Config register CONFIG1H @ 0x300001
   369                           ;	Oscillator Selection bits
   370                           ;	FOSC = INTOSCIO_EC, Internal oscillator, port function on RA6, EC used by USB (INTIO)
   371                           ;	Fail-Safe Clock Monitor Enable bit
   372                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   373                           ;	Internal/External Oscillator Switchover bit
   374                           ;	IESO = OFF, Oscillator Switchover mode disabled
   375  300001                     	org	3145729
   376  300001  08                 	db	8
   377                           
   378                           ;Config register CONFIG2L @ 0x300002
   379                           ;	Power-up Timer Enable bit
   380                           ;	PWRT = OFF, PWRT disabled
   381                           ;	Brown-out Reset Enable bits
   382                           ;	BOR = ON, Brown-out Reset enabled in hardware only (SBOREN is disabled)
   383                           ;	Brown-out Reset Voltage bits
   384                           ;	BORV = 3, Minimum setting 2.05V
   385                           ;	USB Voltage Regulator Enable bit
   386                           ;	VREGEN = OFF, USB voltage regulator disabled
   387  300002                     	org	3145730
   388  300002  1F                 	db	31
   389                           
   390                           ;Config register CONFIG2H @ 0x300003
   391                           ;	Watchdog Timer Enable bit
   392                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
   393                           ;	Watchdog Timer Postscale Select bits
   394                           ;	WDTPS = 32768, 1:32768
   395  300003                     	org	3145731
   396  300003  1E                 	db	30
   397                           
   398                           ; Padding undefined space
   399  300004                     	org	3145732
   400  300004  FF                 	db	255
   401                           
   402                           ;Config register CONFIG3H @ 0x300005
   403                           ;	CCP2 MUX bit
   404                           ;	CCP2MX = OFF, CCP2 input/output is multiplexed with RB3
   405                           ;	PORTB A/D Enable bit
   406                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
   407                           ;	Low-Power Timer 1 Oscillator Enable bit
   408                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   409                           ;	MCLR Pin Enable bit
   410                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
   411  300005                     	org	3145733
   412  300005  80                 	db	128
   413                           
   414                           ;Config register CONFIG4L @ 0x300006
   415                           ;	Stack Full/Underflow Reset Enable bit
   416                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
   417                           ;	Single-Supply ICSP Enable bit
   418                           ;	LVP = OFF, Single-Supply ICSP disabled
   419                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
   420                           ;	ICPRT = OFF, ICPORT disabled
   421                           ;	Extended Instruction Set Enable bit
   422                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   423                           ;	Background Debugger Enable bit
   424                           ;	DEBUG = 0x1, unprogrammed default
   425  300006                     	org	3145734
   426  300006  80                 	db	128
   427                           
   428                           ; Padding undefined space
   429  300007                     	org	3145735
   430  300007  FF                 	db	255
   431                           
   432                           ;Config register CONFIG5L @ 0x300008
   433                           ;	Code Protection bit
   434                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
   435                           ;	Code Protection bit
   436                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
   437                           ;	Code Protection bit
   438                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
   439                           ;	Code Protection bit
   440                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
   441  300008                     	org	3145736
   442  300008  0F                 	db	15
   443                           
   444                           ;Config register CONFIG5H @ 0x300009
   445                           ;	Boot Block Code Protection bit
   446                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
   447                           ;	Data EEPROM Code Protection bit
   448                           ;	CPD = OFF, Data EEPROM is not code-protected
   449  300009                     	org	3145737
   450  300009  C0                 	db	192
   451                           
   452                           ;Config register CONFIG6L @ 0x30000A
   453                           ;	Write Protection bit
   454                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
   455                           ;	Write Protection bit
   456                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
   457                           ;	Write Protection bit
   458                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
   459                           ;	Write Protection bit
   460                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
   461  30000A                     	org	3145738
   462  30000A  0F                 	db	15
   463                           
   464                           ;Config register CONFIG6H @ 0x30000B
   465                           ;	Configuration Register Write Protection bit
   466                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
   467                           ;	Boot Block Write Protection bit
   468                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
   469                           ;	Data EEPROM Write Protection bit
   470                           ;	WRTD = OFF, Data EEPROM is not write-protected
   471  30000B                     	org	3145739
   472  30000B  E0                 	db	224
   473                           
   474                           ;Config register CONFIG7L @ 0x30000C
   475                           ;	Table Read Protection bit
   476                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
   477                           ;	Table Read Protection bit
   478                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
   479                           ;	Table Read Protection bit
   480                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
   481                           ;	Table Read Protection bit
   482                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
   483  30000C                     	org	3145740
   484  30000C  0F                 	db	15
   485                           
   486                           ;Config register CONFIG7H @ 0x30000D
   487                           ;	Boot Block Table Read Protection bit
   488                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
   489  30000D                     	org	3145741
   490  30000D  40                 	db	64
   491                           tosu	equ	0xFFF
   492                           tosh	equ	0xFFE
   493                           tosl	equ	0xFFD
   494                           stkptr	equ	0xFFC
   495                           pclatu	equ	0xFFB
   496                           pclath	equ	0xFFA
   497                           pcl	equ	0xFF9
   498                           tblptru	equ	0xFF8
   499                           tblptrh	equ	0xFF7
   500                           tblptrl	equ	0xFF6
   501                           tablat	equ	0xFF5
   502                           prodh	equ	0xFF4
   503                           prodl	equ	0xFF3
   504                           indf0	equ	0xFEF
   505                           postinc0	equ	0xFEE
   506                           postdec0	equ	0xFED
   507                           preinc0	equ	0xFEC
   508                           plusw0	equ	0xFEB
   509                           fsr0h	equ	0xFEA
   510                           fsr0l	equ	0xFE9
   511                           wreg	equ	0xFE8
   512                           indf1	equ	0xFE7
   513                           postinc1	equ	0xFE6
   514                           postdec1	equ	0xFE5
   515                           preinc1	equ	0xFE4
   516                           plusw1	equ	0xFE3
   517                           fsr1h	equ	0xFE2
   518                           fsr1l	equ	0xFE1
   519                           bsr	equ	0xFE0
   520                           indf2	equ	0xFDF
   521                           postinc2	equ	0xFDE
   522                           postdec2	equ	0xFDD
   523                           preinc2	equ	0xFDC
   524                           plusw2	equ	0xFDB
   525                           fsr2h	equ	0xFDA
   526                           fsr2l	equ	0xFD9
   527                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      1       3
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_IO_Task

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                            _IO_Task
                     _MCU_Initialize
 ---------------------------------------------------------------------------------
 (1) _MCU_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _IO_Task                                              1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _IO_Task
   _MCU_Initialize

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      27        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK0            A0      0       0       5        0.0%
BANK0               A0      0       0       6        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      1       3       1        3.2%
BITBIGSFRhl         3C      0       0      22        0.0%
BITBIGSFRhh         2C      0       0      21        0.0%
BITBIGSFRlll        20      0       0      26        0.0%
BITBIGSFRlhh         8      0       0      23        0.0%
BITBIGSFRlhl         8      0       0      24        0.0%
BITBIGSFRllh         3      0       0      25        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       3       3        0.0%
DATA                 0      0       3       4        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Mon Sep 26 01:05:54 2022

                     l31 7FA8                       l42 7FFC                       l44 7FFE  
                     l39 7FF6                       u10 7FC0                       u11 7FBC  
                     u20 7FE6                       u21 7FE2                       u30 7FF6  
                     u31 7FF2                       u47 7FCE                      l720 7F8C  
                    l730 7FB0                      l722 7F9C                      l740 7FE6  
                    l732 7FC0                      l724 7F9E                      l734 7FC4  
                    l726 7FAA                      l742 7F7C                      l736 7FC8  
                    l728 7FAE                      l744 7F80                      l738 7FD8  
                    wreg 000FE8          __end_of_IO_Task 8000                     _main 7F7C  
                   start 0000             ___param_bank 000000                    ?_main 0003  
                  _PORTE 000F84                    _TRISE 000F96         ??_MCU_Initialize 0003  
                  status 000FD8          __initialization 7F72             __end_of_main 7F8C  
                 ??_main 0004            __activetblptr 000000                ??_IO_Task 0003  
                 isa$std 000001               __accesstop 0060  __end_of__initialization 7F76  
          ___rparam_used 000001           __pcstackCOMRAM 0003                  _IO_Task 7FAA  
                __Hparam 0000                  __Lparam 0000                  __pcinit 7F72  
                __ramtop 0800                  __ptext0 7F7C                  __ptext1 7F8C  
                __ptext2 7FAA     end_of_initialization 7F76                _PORTAbits 000F80  
           _BUTON_Status 0002      start_initialization 7F72              __pbssCOMRAM 0001  
               ?_IO_Task 0003           _MCU_Initialize 7F8C                 _LATEbits 000F8D  
            _BUTON_Ticks 0001   __end_of_MCU_Initialize 7FAA                 __Hrparam 0000  
               __Lrparam 0000          ?_MCU_Initialize 0003                 isa$xinst 000000  
             _OSCCONbits 000FD3  
